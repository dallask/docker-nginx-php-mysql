<?xml version="1.0" encoding="UTF-8"?>
<project name="HelloWorld" default="dist" basedir="." description="a demo project">

    <property name="message" value="Hello World!"/>

    <!-- ============================================  -->
    <!-- Target: built in properties example      -->
    <!-- ============================================  -->
    <target name="built-in-properties">
        <echo msg="Examples of system properties:"/>
        <echo msg="application.startdir: ${application.startdir}" />
        <echo msg="env.SCRIPT_NAME: ${env.SCRIPT_NAME}" />
        <echo msg="phing.version: ${phing.version}" />
        <echo msg="user.home: ${user.home}" />
    </target>

    <target name="welcome">
        <echo msg="${message}"/>
        <echo msg="Making directory ./build" />
        <mkdir dir="./build" />
    </target>

    <!-- ============================================  -->
    <!-- Target: unittest with using exec      -->
    <!-- ============================================  -->
    <target name="unittest">
        <echo msg="Run Unit tests with using exec..."/>
        <exec executable="./vendor/bin/phpunit" passthru="true">
            <arg value="--configuration"/>
            <arg value="phpunit.xml.dist"/>
        </exec>
    </target>

    <!-- ============================================  -->
    <!-- Target: prepare                               -->
    <!-- ============================================  -->
    <target name="prepare" depends="welcome">
        <!-- Make a build directory in the current dir `.` -->
        <echo msg="Making directory ./build" />
        <mkdir dir="./build" />
    </target>

    <!-- ============================================  -->
    <!-- Target: build - Dependant on `prepare`        -->
    <!-- ============================================  -->
    <target name="build" depends="prepare,unittest">
        <!-- Create our file - (we dont have to do this   -->
        <!-- the echo below creates it if it don't exist) -->
        <!-- It's here as a simple example                -->
        <echo msg="Making new README.txt file in build directory..." />
        <touch file="./build/README.txt" millis="102134111" />
    </target>

    <!-- ============================================  -->
    <!-- (DEFAULT) Target: dist - Dependant on `build` -->
    <!-- ============================================  -->
    <target name="dist" depends="build">
        <echo msg="Writing text to the file README.txt..." />
        <echo file="./build/README.txt" append="false">Writing this msg to README.txt</echo>
    </target>

    <!-- ============================================  -->
    <!-- Target: custom task file decoding             -->
    <!-- ============================================  -->
    <taskdef name="convencoding" classname="App\Acme\convEncodingTask" />

    <target name="convertencoding">
        <convencoding fromencoding="windows-1251" toencoding="utf-8"
                      targetdir="new_dir">
            <fileset dir="src_dir" />
        </convencoding>
    </target>
    <!-- /custom task file decoding  -->


    <!-- ============================================  -->
    <!-- Target: custom task in build.xml              -->
    <!-- ============================================  -->
    <target name="defineadhoc" hidden="true">
        <adhoc-task name="ah1"><![CDATA[
      class SomeAdHocTaskClass extends Task {
        private $arg1;

        function setAh1Arg1($arg1) {
          $this->arg1 = $arg1;
        }

        function main() {
          $this->log("In " . __METHOD__ . ", arg1 = " . $this->arg1);
        }
      }
    ]]></adhoc-task>
    </target>

    <target name="useadhoc" depends="defineadhoc" description="Demo: use an ad-hoc class">
        <ah1 ah1Arg1="foo" />
    </target>
    <!-- /custom task in build.xml  -->

    <!-- ============================================  -->
    <!-- Target: custom task demo                      -->
    <!-- ============================================  -->
    <taskdef name="demo" classname="Acme\Build\DemoTask" />

    <target name="usetask">
        <demo arg="some value" />
    </target>
    <!-- /custom task demo -->

</project>